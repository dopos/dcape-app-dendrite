# app custom Makefile

APP_NAME ?= dendrite

# The domain name of this homeserver.
APP_DOMAIN ?= dev.lan

# Hostname for external access
APP_SITE ?= matrix.dev.lan

# Default username for create-user-admin
APP_USER ?= admin

# Docker repo & image name without version
IMAGE    ?= matrixdotorg/dendrite-monolith

# TODO: false/yes??
USE_DB = yes

#USE_TLS = yes

# ------------------------------------------------------------------------------
# app custom config

IMAGE_VER        ?= latest

DATA_PATH        ?= $(APP_NAME)
DCAPE_ROOT       ?= /opt/dcape/var


# ------------------------------------------------------------------------------
# .env template (custom part)
# inserted in .env.sample via 'make config'
define CONFIG_CUSTOM
# ------------------------------------------------------------------------------
# app custom config, generated by make config
# db:$(USE_DB) user:$(ADD_USER)

# Relative data path for service data
DATA_PATH=$(DATA_PATH)

# Path to /opt/dcape/var. Used only outside drone
DCAPE_ROOT=$(DCAPE_ROOT)

endef

# ------------------------------------------------------------------------------
# Find and include DCAPE/apps/drone/dcape-app/Makefile
DCAPE_COMPOSE   ?= dcape-compose
DCAPE_MAKEFILE  ?= $(shell docker inspect -f "{{.Config.Labels.dcape_app_makefile}}" $(DCAPE_COMPOSE))
ifeq ($(shell test -e $(DCAPE_MAKEFILE) && echo -n yes),yes)
  include $(DCAPE_MAKEFILE)
else
  include /opt/dcape-app/Makefile
endif

## create required files
init-files: $(DCAPE_ROOT)/$(DATA_PATH)/config $(DCAPE_ROOT)/$(DATA_PATH)/config/matrix_key.pem $(DCAPE_ROOT)/$(DATA_PATH)/config/dendrite.yaml

$(DCAPE_ROOT)/$(DATA_PATH)/config:
	mkdir -p $(DCAPE_ROOT)/$(DATA_PATH)/config

$(DCAPE_ROOT)/$(DATA_PATH)/config/matrix_key.pem:
	@docker run --rm --entrypoint="" \
	  -v $(DCAPE_ROOT)/$(DATA_PATH)/config:/mnt \
	  $${IMAGE}:$${IMAGE_VER} \
	  /usr/bin/generate-keys \
	  -private-key /mnt/matrix_key.pem \
	  -tls-cert /mnt/server.crt \
	  -tls-key /mnt/server.key

$(DCAPE_ROOT)/$(DATA_PATH)/config/dendrite.yaml: dendrite-sample.monolith.yaml
	@sed "s/server_name: localhost/server_name: $(APP_DOMAIN)/ ; s|postgresql://username:password\@hostname/dendrite|postgresql://$(PGUSER):$(PGPASSWORD)\@db/$(PGDATABASE)|" $<  > $@

## create admin user
create-user-admin:
	@docker exec -it matrix-dev-lan_app_1 \
	  /usr/bin/create-account -config /etc/dendrite/dendrite.yaml -username $(APP_USER) -admin

create-user-admin-help:
	@docker exec -it matrix-dev-lan_app_1 /usr/bin/create-account -h

check:
	curl http://$(APP_SITE)/_matrix/client/versions
